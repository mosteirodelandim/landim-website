@import "~react-image-gallery/styles/scss/image-gallery.scss";

#pageMain{
  > header {
    @include padding(12em, 0);
    background-attachment: fixed;
    background-position: center center;
    background-repeat: no-repeat;
    background-size: cover;
    text-align: center;

    h2 {
      font-size: 1.75em;
      margin: 0 0 (_size(element-margin) * 0.25) 0;
    }

    p {
      color: inherit;
      letter-spacing: _size(letter-spacing-alt);
      text-transform: uppercase;
      top: 0;

      a {
        color: inherit;
      }
    }

    @include breakpoint('<=xlarge') {
      @include padding(10em, 0);
    }

    @include breakpoint('<=large') {
      @include padding(8em, 3em);
    }

    @include breakpoint('<=medium') {
      @include padding(10em, 3em);
    }

    @include breakpoint('<=small') {
      @include padding(5em, 3em);

      h2 {
        font-size: 1.25em;
        margin: 0 0 (_size(element-margin) * 0.5) 0;
      }
    }
  }

  #servicesHeader {
    @include vendor('background-image', ('linear-gradient(to top, rgba(0,0,0,0.5), rgba(0,0,0,0.5))', 'url("../images/services/services_banner.jpg")'));
  }

  #historyHeader {
    @include vendor('background-image', ('linear-gradient(to top, rgba(0,0,0,0.5), rgba(0,0,0,0.5))', 'url("../images/history/banner.jpg")'));
  }

  #winestayHeader {
    @include vendor('background-image', ('linear-gradient(to top, rgba(0,0,0,0.5), rgba(0,0,0,0.5))', 'url("../images/wine_stay/banner.jpg")'));
  }

  /* Wrapper */

  @mixin wrapper($p) {
    background-color: _palette($p, bg);
    color: _palette($p, fg);

    // Basic

    strong, b {
      color: _palette($p, fg-bold);
    }

    h2, h3, h4, h5, h6 {
      color: _palette($p, fg-bold);
    }

    hr {
      border-color: _palette($p, border);
    }

    blockquote {
      border-color: _palette($p, border);
    }

    code {
      background: _palette($p, border-bg);
    }

    // Section/Article

    header {
      p {
        color: _palette($p, fg-light);
      }

      &.major {
        h2, h3, h4, h5, h6 {
          border-color: _palette($p, border);
          text-align: center;
        }

        p {
          color: _palette($p, fg);
          text-align: center;
        }
      }
    }

    // Form

    label {
      color: _palette($p, fg-bold);
    }

    input[type="text"],
    input[type="password"],
    input[type="email"],
    select,
    textarea {
      background-color: _palette($p, border-bg);
    }

    select {
      background-image: svg-url("<svg xmlns='http://www.w3.org/2000/svg' width='40' height='40' preserveAspectRatio='none' viewBox='0 0 40 40'><path d='M9.4,12.3l10.4,10.4l10.4-10.4c0.2-0.2,0.5-0.4,0.9-0.4c0.3,0,0.6,0.1,0.9,0.4l3.3,3.3c0.2,0.2,0.4,0.5,0.4,0.9 c0,0.4-0.1,0.6-0.4,0.9L20.7,31.9c-0.2,0.2-0.5,0.4-0.9,0.4c-0.3,0-0.6-0.1-0.9-0.4L4.3,17.3c-0.2-0.2-0.4-0.5-0.4-0.9 c0-0.4,0.1-0.6,0.4-0.9l3.3-3.3c0.2-0.2,0.5-0.4,0.9-0.4S9.1,12.1,9.4,12.3z' fill='#{_palette($p, border)}' /></svg>");

      option {
        color: _palette($p, fg-bold);
        background: _palette($p, bg);
      }
    }

    input[type="checkbox"],
    input[type="radio"], {
      & + label {
        color: _palette($p, fg);

        &:before {
          background: _palette($p, border-bg);
        }
      }

      &:checked + label {
        &:before {
          background: _palette($p, fg-bold);
          color: _palette($p, bg);
        }
      }
    }

    ::-webkit-input-placeholder {
      color: _palette($p, fg-light) !important;
    }

    :-moz-placeholder {
      color: _palette($p, fg-light) !important;
    }

    ::-moz-placeholder {
      color: _palette($p, fg-light) !important;
    }

    :-ms-input-placeholder {
      color: _palette($p, fg-light) !important;
    }

    .formerize-placeholder {
      color: _palette($p, fg-light) !important;
    }

    // Icon

    .icon {
      &.major {
        border-color: _palette($p, border);
      }
    }

    // List

    ul {
      &.alt {
        li {
          border-color: _palette($p, border);
        }
      }
    }

    // Table

    table {
      tbody {
        tr {
          border-color: _palette($p, border);

          &:nth-child(2n + 1) {
            background-color: _palette($p, border-bg);
          }
        }
      }

      th {
        color: _palette($p, fg-bold);
      }

      thead {
        border-color: _palette($p, border);
      }

      tfoot {
        border-color: _palette($p, border);
      }

      &.alt {
        tbody {
          tr {
            td {
              border-color: _palette($p, border);
            }
          }
        }
      }
    }

    // Button

    input[type="submit"],
    input[type="reset"],
    input[type="button"],
    button,
    .button {
      box-shadow: inset 0 0 0 2px _palette($p, border);
      color: _palette($p, fg-bold);

      &:hover {
        background-color: _palette($p, border-bg);
      }

      &:active {
        background-color: _palette($p, border2-bg);
      }
    }

    // Features

    .features {
      li {
        @include breakpoint('<=small') {
          border-top-color: _palette($p, border);
        }
      }
    }

  }

  >.wrapper {
    @include padding(6em, 0);

    > .inner {
      width: 60em;
      margin: 0 auto;

      @include breakpoint('<=large') {
        width: 90%;
      }

      @include breakpoint('<=medium') {
        width: 100%;
      }
    }

    &.alt {
      padding: 0;
    }

    &.style1 {
      @include wrapper(accent1);
    }

    &.style2 {
      background-color: _palette(bg);
    }

    &.style3 {
      @include wrapper(accent5);
    }

    &.style4 {
      background-color: transparent;
    }

    &.style5 {
      @include wrapper(accent7);
    }

    @include breakpoint('<=medium') {
      @include padding(4em, 3em);
    }

    @include breakpoint('<=small') {
      @include padding(3em, 2em);
    }
  }

  /* Spotlight */

  .spotlight {
    @include vendor('align-items', 'center');
    @include vendor('display', 'flex');

    .image {
      @include vendor('order', '1');
      border-radius: 0;
      width: 40%;

      img {
        border-radius: 0;
        width: 100%;
      }
    }

    .content {
      @include padding(2em, 4em);
      @include vendor('order', '2');
      max-width: 48em;
      width: 60%;
    }

    &:nth-child(2n) {
      @include vendor('flex-direction', 'row-reverse');
    }

    &:nth-child(1) {
      background-color: _palette(service_cloister-bg);
    }

    &:nth-child(2) {
      background-color: _palette(service_garden-bg);
    }

    &:nth-child(3) {
      background-color: _palette(service_room-bg);
    }

    &:nth-child(4) {
      background-color: _palette(service_church-bg);
    }

    @include breakpoint('<=large') {
      .image {
        width: 45%;
      }

      .content {
        width: 55%;
      }
    }

    @include breakpoint('<=medium') {
      display: block;

      br {
        display: none;
      }

      .image {
        width: 100%;
      }

      .content {
        @include padding(4em, 3em);
        max-width: none;
        text-align: center;
        width: 100%;
      }
    }

    @include breakpoint('<=small') {
      .content {
        @include padding(3em, 2em);
      }
    }
  }

  /* Image */

  .image {
    border-radius: 3px;
    border: 0;
    display: inline-block;
    position: relative;

    img {
      border-radius: 3px;
      display: block;
    }

    &.left {
      float: left;
      margin: 0 2em 2em 0;
      top: 0.25em;
    }

    &.right {
      float: right;
      margin: 0 0 2em 2em;
      top: 0.25em;
    }

    &.left,
    &.right {
      max-width: 40%;

      img {
        width: 100%;
      }
    }

    &.fit {
      display: block;
      margin: 0 0 _size(element-margin) 0;
      width: 100%;

      img {
        width: 100%;
      }
    }
  }

  /* Features */

  .features {
    @include vendor('display', 'flex');
    @include vendor('flex-wrap', 'wrap');
    @include vendor('justify-content', 'center');
    list-style: none;
    padding: 0;
    width: 100%;

    li {
      @include padding(4em, 4em, (0,0,0,2em));
      display: block;
      position: relative;
      text-align: left;
      width: 50%;

      @for $i from 1 through _misc(max-features) {
        $j: 0.035 * $i;

        &:nth-child(#{$i}) {
          background-color: rgba(0,0,0, $j);
        }
      }

      &:before {
        display: block;
        color: _palette(accent2, bg);
        position: absolute;
        left: 1.75em;
        top: 2.75em;
        font-size: 1.5em;
      }

      &:nth-child(1) {
        border-top-left-radius: 3px;
      }

      &:nth-child(2) {
        border-top-right-radius: 3px;
      }

      &:nth-last-child(1) {
        border-bottom-right-radius: 3px;
      }

      &:nth-last-child(2) {
        border-bottom-left-radius: 3px;
      }

      @include breakpoint('<=medium') {
        @include padding(3em, 2em);
        text-align: center;

        &:before {
          left: 0;
          margin: 0 0 (_size(element-margin) * 0.5) 0;
          position: relative;
          top: 0;
        }
      }

      @include breakpoint('<=small') {
        @include padding(3em, 0);
        background-color: transparent !important;
        border-top: solid 2px _palette(border);
        width: 100%;

        &:first-child {
          border-top: 0;
        }
      }
    }
  }

  /* CTA */

  #cta {
    .inner {
      @include vendor('display', 'flex');
      max-width: 45em;

      header {
        @include vendor('order', '1');
        padding-right: 3em;
        width: 70%;

        p {
          color: inherit;
        }
      }

      .actions {
        @include vendor('order', '2');
        width: 30%;
      }

      @include breakpoint('<=medium') {
        display: block;
        text-align: center;

        header {
          padding-right: 0;
          width: 100%;
        }

        .actions {
          margin-left: auto;
          margin-right: auto;
          max-width: 20em;
          width: 100%;
        }
      }

      @include breakpoint('<=small') {
        .actions {
          max-width: none;
        }
      }
    }
  }

  /* Actions */

  ul.actions {
    @include vendor('display', 'flex');
    cursor: default;
    list-style: none;
    margin-left: (_size(element-margin) * -0.5);
    padding-left: 0;

    li {
      padding: 0 0 0 (_size(element-margin) * 0.5);
      vertical-align: middle;
    }

    &.special {
      @include vendor('justify-content', 'center');
      width: 100%;
      margin-left: 0;

      li {
        &:first-child {
          padding-left: 0;
        }
      }
    }

    &.stacked {
      @include vendor('flex-direction', 'column');
      @include vendor('justify-content', 'center');
      margin-left: 0;

      li {
        padding: (_size(element-margin) * 0.5) 0 0 0;

        &:first-child {
          padding-top: 0;
        }
      }
    }

    &.fit {
      width: calc(100% + #{_size(element-margin) * 0.5});

      li {
        @include vendor('flex-grow', '1');
        @include vendor('flex-shrink', '1');
        width: 100%;

        > * {
          width: 100%;
        }
      }

      &.stacked {
        width: 100%;
      }
    }

    @include breakpoint('<=xsmall') {
      &:not(.fixed) {
        @include vendor('flex-direction', 'column');
        margin-left: 0;
        width: 100% !important;

        li {
          @include vendor('flex-grow', '1');
          @include vendor('flex-shrink', '1');
          padding: (_size(element-margin) * 0.5) 0 0 0;
          text-align: center;
          width: 100%;

          > * {
            width: 100%;
          }

          &:first-child {
            padding-top: 0;
          }

          input[type="submit"],
          input[type="reset"],
          input[type="button"],
          button,
          .button {
            width: 100%;

            &.icon {
              &:before {
                margin-left: -0.5em;
              }
            }
          }
        }
      }
    }
  }

  /* Button */

  input[type="submit"],
  input[type="reset"],
  input[type="button"],
  button,
  .button {
    @include vendor('appearance', 'none');
    @include vendor('transition', ('background-color #{_duration(transitions)} ease-in-out', 'color #{_duration(transitions)} ease-in-out'));
    background-color: transparent;
    border-radius: 3px;
    border: 0;
    box-shadow: inset 0 0 0 2px _palette(border);
    color: _palette(fg-bold);
    cursor: pointer;
    display: inline-block;
    font-size: 0.8em;
    font-weight: _font(weight-bold);
    height: 3.125em;
    letter-spacing: _size(letter-spacing-alt);
    line-height: 3.125em;
    max-width: 30em;
    padding: 0 2.75em;
    text-align: center;
    text-decoration: none;
    text-transform: uppercase;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;

    &:hover {
      background-color: _palette(border-bg);
    }

    &:active {
      background-color: _palette(border2-bg);
    }

    &.icon {
      &:before {
        margin-right: 0.5em;
      }
    }

    &.fit {
      width: 100%;
    }

    &.small {
      font-size: 0.8em;
    }

    &.large {
      font-size: 1.35em;
    }

    &.primary {
      background-color: _palette(accent6, bg);
      box-shadow: none !important;
      color: _palette(accent6, fg-bold) !important;

      &:hover {
        background-color: lighten(_palette(accent6, bg), 5) !important;
      }

      &:active {
        background-color: darken(_palette(accent6, bg), 5) !important;
      }
    }

    &.disabled,
    &:disabled {
      @include vendor('pointer-events', 'none');
      opacity: 0.25;
    }

    @include breakpoint('<=small') {
      height: 3.75em;
      line-height: 3.75em;
    }
  }

  /* Photogallery */

  #photogallery {
    @include breakpoint('<=xlarge') {
      padding: 4vh 0;
    }

    .image-gallery {
      width: 100%;
      height: 100%;
    }

    .image-gallery-slide {
      background-color: rgba(0,0,0,0);
    }
  }
}

